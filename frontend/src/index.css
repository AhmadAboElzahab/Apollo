@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: poppins;
  src: url(./assets/Poppins-Regular.ttf);
}
.cn {
  height: 100vh;
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
}
.sec {
  scroll-snap-align: start;
  scroll-snap-stop: always;
}
body {
  font-family: poppins;
  background-color: black;
  background-image: url('./assets/grid.svg');
}

.bg_grid {
  background-image: url('./assets/grid.svg');
}

.main_image {
  display: block;
  margin-inline: auto;
}

.glitch {
  position: relative;
  font-size: 30px;
  font-weight: bold;
  color: #ffffff;
  letter-spacing: 3px;
  z-index: 1;
}

.glitch:before,
.glitch:after {
  display: block;
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.8;
}

.glitch:before {
  animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
  color: #00ffff;
  z-index: -1;
}

.glitch:after {
  animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;
  color: #ff00ff;
  z-index: -2;
}

@keyframes glitch-it {
  0% {
    transform: translate(0);
  }

  20% {
    transform: translate(-2px, 2px);
  }

  40% {
    transform: translate(-2px, -2px);
  }

  60% {
    transform: translate(2px, 2px);
  }

  80% {
    transform: translate(2px, -2px);
  }

  to {
    transform: translate(0);
  }
}

@layer components {
  .hamburger div:first-child {
    @apply rotate-45 translate-y-1.5;
  }

  .hamburger div:last-child {
    @apply -rotate-45 -translate-y-1;
  }
}

.bounce-in-right {
  animation: bounce-in-right 2s ease;
}

@keyframes bounce-in-right {
  0% {
    opacity: 0;
    transform: translateX(2000px);
  }

  60% {
    opacity: 1;
    transform: translateX(-30px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    transform: translateX(0);
  }
}

.bounce-in-left {
  animation: bounce-in-left 2s ease;
}

@keyframes bounce-in-left {
  0% {
    opacity: 0;
    transform: translateX(-2000px);
  }

  60% {
    opacity: 1;
    transform: translateX(30px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    transform: translateX(0);
  }
}

@layer components {
  .link_style {
    @apply block rounded-md px-5 py-2 text-sm font-medium text-gray-400 hover:bg-gray-800 hover:text-white;
  }
}
.active {
  color: white;
}

.blurhash-wrapper {
  height: 300px;
  width: 100%;
  margin: 0 auto;
  position: relative;
  border-top-left-radius: 0.375rem; /* 6px */
  border-top-right-radius: 0.375rem; /* 6px */
}

.image {
  position: absolute;
  top: 0;
  left: 0;
  height: 300px;
  width: 100%;
  border-top-left-radius: 0.375rem; /* 6px */
  border-top-right-radius: 0.375rem; /* 6px */
  object-fit: cover;
}
.BigImage {
  position: absolute;
  top: 0;
  left: 0;
  height: 600px;
  width: 100%;
  border-top-left-radius: 0.375rem; /* 6px */
  border-top-right-radius: 0.375rem; /* 6px */
  object-fit: cover;
}


.wobble {
  animation: wobble 2s ease infinite;
}

@keyframes wobble {
  0% {
    transform: translateX(0%);
  }

  15% {
    transform: translateX(-25%) rotate(-5deg);
  }

  30% {
    transform: translateX(20%) rotate(3deg);
  }

  45% {
    transform: translateX(-15%) rotate(-3deg);
  }

  60% {
    transform: translateX(10%) rotate(2deg);
  }

  75% {
    transform: translateX(-5%) rotate(-1deg);
  }

  100% {
    transform: translateX(0%);
  }
}

#cards:hover > .card::after {
  opacity: 1;
}

.card {
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  cursor: pointer;
  display: flex;
  height: 400px;
  flex-direction: column;
  position: relative;
  width: 500px;
}

.card:hover::before {
  opacity: 1;
}

.card::before,
.card::after {
  border-radius: inherit;
  content: '';
  height: 100%;
  left: 0px;
  opacity: 0;
  position: absolute;
  top: 0px;
  transition: opacity 500ms;
  width: 100%;
}

.card::before {
  background: radial-gradient(
    800px circle at var(--mouse-x) var(--mouse-y),
    rgba(255, 255, 255, 0.06),
    transparent 40%
  );
  z-index: 3;
}

.card::after {
  background: radial-gradient(
    600px circle at var(--mouse-x) var(--mouse-y),
    rgba(255, 255, 255, 0.4),
    transparent 40%
  );
  z-index: 1;
}

.card > .card-content {
  background-color: rgb(10, 10, 10);
  border-radius: inherit;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  inset: 1px;
  padding: 10px;
  position: absolute;
  z-index: 2;
}
